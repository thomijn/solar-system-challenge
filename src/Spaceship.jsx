/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from "react";
import {
  Cloud,
  Clouds,
  Sparkles,
  useAnimations,
  useGLTF,
  useTexture,
  useVideoTexture,
} from "@react-three/drei";
import FakeGlowMaterial from "./FakeGlowMaterial";
import { useControls } from "leva";
import * as THREE from "three";

export default function Model({ ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(
    "/spaceship-transformed.glb"
  );
  const { actions } = useAnimations(animations, group);
  const videoTexture = useVideoTexture("/video-compressed.mp4");

  const bakedTexture = useTexture("/test.jpg");
  const bakedAstronaut = useTexture("/baked-astronaut.jpg");
  bakedAstronaut.channel = 1;

  useEffect(() => {
    actions["Armature|mixamo.com|Layer0"].play();
  }, []);

  const glowControls = useControls({
    falloff: { value: 0.45, min: 0.0, max: 1.0 },
    glowInternalRadius: { value: -0.4, min: -1.0, max: 1.0 },
    glowColor: { value: "#fc4444" },
    glowSharpness: { value: 1.0, min: 0.0, max: 2.0 },
    side: {
      value: "THREE.FrontSide",
      options: ["THREE.FrontSide", "THREE.BackSide", "THREE.DoubleSide"],
    },
    opacity: { value: 1.0, min: 0.0, max: 1.0 },
    depthTest: false,
  });

  return (
    <group ref={group} {...props} dispose={null}>
  
      <Clouds
        position={[-2.3, 0.85, 1]}
        scale={0.05}
        material={THREE.MeshBasicMaterial}
      >
        <Cloud
          seed={1}
          growth={10}
          speed={0.5}
          opacity={0.1}
          segments={10}
          bounds={[10, 2, 2]}
          volume={20}
          color="white"
        />
        <Cloud
          seed={1}
          position={[0, 0, 10]}
          growth={10}
          speed={1}
          opacity={0.2}
          segments={10}
          bounds={[10, 2, 2]}
          volume={10}
          color="white"
        />
        <Cloud
          seed={1}
          position={[0, 0, -8]}
          growth={10}
          speed={0.2}
          opacity={0.1}
          segments={10}
          bounds={[10, 2, 2]}
          volume={20}
          color="white"
        />
      </Clouds>

      <mesh
        name="controlpanel-video"
        geometry={nodes["controlpanel-video"].geometry}
        material={nodes["controlpanel-video"].material}
      >
        <meshBasicMaterial map={videoTexture} map-flipY={false} />
      </mesh>
      <mesh
        name="emission"
        scale={1}
        geometry={nodes.emission.geometry}
        material={nodes.emission.material}
      >
        <meshBasicMaterial color={"#ffe6e6"} />
      </mesh>
      <mesh  geometry={nodes.emission.geometry}>
        <FakeGlowMaterial {...glowControls} />
      </mesh>
      <mesh
        name="merged-mesh"
        geometry={nodes["merged-mesh"].geometry}
        material={nodes["merged-mesh"].material}
      >
        <meshBasicMaterial map={bakedTexture} map-flipY={false} />
      </mesh>

      <group
        name="Armature"
        position={[-0.48, -2.63, 1.88]}
        rotation={[Math.PI / 2, 0, Math.PI]}
        scale={0.035}
      >
        <primitive object={nodes.mixamorigHips} />
        <skinnedMesh
          frustumCulled={false}
          name="LOD_0"
          geometry={nodes.LOD_0.geometry}
          material={nodes.LOD_0.material}
          skeleton={nodes.LOD_0.skeleton}
        >
          <meshBasicMaterial map={bakedAstronaut} map-flipY={false} />
        </skinnedMesh>
      </group>
    </group>
  );
}

useGLTF.preload("/spaceship-transformed.glb");
